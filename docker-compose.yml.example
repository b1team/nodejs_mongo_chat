VERION1 nginx VERION1
----------------------------------------------------------------
version: "3.5"

services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        image: chatapp
        hostname: nodejsapp
        env_file: .env
        ports:
            # - "8080:8080"
            - "${API_PORT}:${API_PORT}"
        depends_on:
            - db
            - redis
        restart: unless-stopped
        networks:
            - main-net

    db:
        image: mongo:4.2
        restart: unless-stopped
        networks:
            - main-net
        volumes:
            - mongodata:/data/db
        env_file: .env
        environment:
            - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
            - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}

    redis:
        image: redis:5.0.7
        restart: unless-stopped
        networks:
            - main-net
        volumes:
            - redisdata:/data
        env_file: .env


    nginx:
        restart: unless-stopped
        build:
            context: ./nginx
            dockerfile: Dockerfile
        image: nginx
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./data/nginx:/etc/nginx/conf.d
            - ./data/certbot/conf:/etc/letsencrypt
            - ./data/certbot/www:/var/www/certbot
        depends_on:
            - app
        links:
            - "app:expressapp"
        networks:
            - main-net
        command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

    certbot:
        image: certbot/certbot
        restart: unless-stopped
        volumes:
            - ./data/certbot/conf:/etc/letsencrypt
            - ./data/certbot/www:/var/www/certbot
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

networks:
    main-net:
        driver: bridge

volumes:
    mongodata:
    redisdata:

----------------------------------------------------------------
VERSION2 nginx VERSION2
----------------------------------------------------------------
version: "3.5"

services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        image: chatapp
        hostname: nodejsapp
        env_file: .env
        ports:
            # - "8080:8080"
            - "${API_PORT}:${API_PORT}"
        depends_on:
            - db
            - redis
        restart: unless-stopped
        networks:
            - main-net

    db:
        image: mongo:4.2
        restart: unless-stopped
        networks:
            - main-net
        volumes:
            - mongodata:/data/db
        env_file: .env
        environment:
            - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
            - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}

    redis:
        image: redis:5.0.7
        restart: unless-stopped
        networks:
            - main-net
        volumes:
            - redisdata:/data
        env_file: .env


    nginx:
        restart: unless-stopped
        build:
            context: ./nginx
            dockerfile: Dockerfile
        image: nginx
        ports:
            - "80:80"
            - "443:443"
        depends_on:
            - app
        networks:
            - main-net

networks:
    main-net:
        driver: bridge

volumes:
    mongodata:
    redisdata: